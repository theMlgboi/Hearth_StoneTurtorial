/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Student
 */
public class HearthstoneJFrame10_1 extends javax.swing.JFrame {

    /**
     * Creates new form HearthstoneJFrame10
     */
    public HearthstoneJFrame10_1() {
        initComponents();
        //forces the user to hit the intilize button befour the others 
         intilize_button.setEnabled(true);
       display_button.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        power = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        goal = new javax.swing.JRadioButton();
        mana = new javax.swing.JRadioButton();
        Hero = new javax.swing.JRadioButton();
        deck_types = new javax.swing.JRadioButton();
        abilites = new javax.swing.JRadioButton();
        charge = new javax.swing.JRadioButton();
        divine_Sheild = new javax.swing.JRadioButton();
        taunt = new javax.swing.JRadioButton();
        battlecry = new javax.swing.JRadioButton();
        deathrattle = new javax.swing.JRadioButton();
        silence = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        intilize_button = new javax.swing.JButton();
        display_button = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Guides");

        power.add(goal);
        goal.setText("Goal");

        power.add(mana);
        mana.setText("Mana");

        power.add(Hero);
        Hero.setText("Heros/Classes");

        power.add(deck_types);
        deck_types.setText("Deck Types");

        power.add(abilites);
        abilites.setText("Abilities ");

        power.add(charge);
        charge.setText("Charge");

        power.add(divine_Sheild);
        divine_Sheild.setText("Divine Shield");

        power.add(taunt);
        taunt.setText("Taunt");

        power.add(battlecry);
        battlecry.setText("Battlecry");

        power.add(deathrattle);
        deathrattle.setText("Deathrattle");

        power.add(silence);
        silence.setText("Silence");
        silence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silenceActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        intilize_button.setText("Intilize");
        intilize_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                intilize_buttonActionPerformed(evt);
            }
        });

        display_button.setText("Display");
        display_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display_buttonActionPerformed(evt);
            }
        });

        jButton1.setText("To Quiz");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(divine_Sheild)
                            .addComponent(taunt)
                            .addComponent(battlecry)
                            .addComponent(deathrattle)
                            .addComponent(Hero)
                            .addComponent(deck_types)
                            .addComponent(abilites)
                            .addComponent(charge)
                            .addComponent(mana)
                            .addComponent(goal)
                            .addComponent(silence))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(intilize_button)
                                .addGap(29, 29, 29)
                                .addComponent(display_button)
                                .addGap(48, 48, 48)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(goal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mana)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Hero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deck_types)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(abilites)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(charge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(divine_Sheild)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(taunt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(battlecry)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deathrattle))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(intilize_button)
                        .addComponent(display_button)
                        .addComponent(jButton1))
                    .addComponent(silence))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void silenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_silenceActionPerformed

    private void intilize_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_intilize_buttonActionPerformed
        //enables the other buttons once the intilize button is selected
        intilize_button.setEnabled(false);
       
       display_button.setEnabled(true);
    }//GEN-LAST:event_intilize_buttonActionPerformed

    private void display_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_display_buttonActionPerformed
       //display diffrent  text depending on what button is selected 
        if(goal.isSelected()){
           jTextArea1.setText("In Hearthstone the goal is to set your opponent to zero or less life\n" + 
    "You do this by playing minions and making them attack your opponent\n" +
    "But be careful, your opponent will also play minions so be sure to keep them in check"  
);
           
       }
       if(mana.isSelected()){
           jTextArea1.setText("Is required to play minions, cast spells, play secrets and equip weapons\n"+ 
"At the start of every turn you gain 1 Mana\n"+
"All of your Mana from previous turns refreshes at the start of your turn/n"+
"You can only have 10 or less Mana at once\n");

       }
           if(Hero.isSelected()){
               jTextArea1.setText("In Hearthstone there is 9 different Heroes\n"+ 
"Each Hero has special class cards which highlight each heroes abilities\n"+
"Every Hero has an unique Hero power, that costs 2 Mana\n");
 }
       if(deck_types.isSelected()){
           jTextArea1.setText("Most decks in Hearthstone can be put into 1 of 3 categories (Aggro, tempo, Control)\n" +
"Aggro decks have a very powerful early game. They try to use cheap minions to fill the board and kill their opponent early on\n" + 
"Tempo decks will play a more value oriented game, by using effective tools to maintain pressure and stay on board\n" + 
"Control decks have a weaker early game and rely on powerful Area of effect spells to destroy Aggro decks. Control decks use powerful minions and spells to win more in long grindy games\n"
);
       }
       if(abilites.isSelected()){
           jTextArea1.setText("Minions in Hearthstone have different abilities\n" +  
"The most common are Charge, Divine Shield, Taunt, Battlecry, Deathrattle and Silence\n" 
);
       }
       if(charge.isSelected()){
           jTextArea1.setText("In Hearthstone most minions need a wait a turn before they can attack\n" +
"Minions with charge don’t need to wait and can attack on the same turn they are played\n"
);
       }
            if(divine_Sheild.isSelected()){
        jTextArea1.setText("A minion with Divine Shield is immune until the shield is removed\n"+
"The only way to get rid of the shield is doing damage to the minion" 
);
    }
    if(taunt.isSelected()){
        jTextArea1.setText("Minions with Taunt must be killed or silenced,\n "
                + "befour other minions without taunt or Heros can be attacked"); 

    }
    if(battlecry.isSelected()){
        jTextArea1.setText("As soon as a minion with Battlecry is played,\n" + 
         "the action corresponding with the text on the card will trigger"  
);
    }
    if(deathrattle.isSelected()){
        jTextArea1.setText("Once a minion with deathrattle dies, the text on the card will trigger\n" + 
"Be careful if a Deathrattle minion is silenced its Deathrattle won't trigger" 
);
    }
    if(silence.isSelected()){
        jTextArea1.setText("If a minion is silenced any effects\n" + "the minion had will no longer trigger" );
    }
    }//GEN-LAST:event_display_buttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //moves to the next page 
        this.setVisible(false);
        new hearthstoneJFrame2().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
 
       
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HearthstoneJFrame10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HearthstoneJFrame10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HearthstoneJFrame10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HearthstoneJFrame10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HearthstoneJFrame10().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Hero;
    private javax.swing.JRadioButton abilites;
    private javax.swing.JRadioButton battlecry;
    private javax.swing.JRadioButton charge;
    private javax.swing.JRadioButton deathrattle;
    private javax.swing.JRadioButton deck_types;
    private javax.swing.JButton display_button;
    private javax.swing.JRadioButton divine_Sheild;
    private javax.swing.JRadioButton goal;
    private javax.swing.JButton intilize_button;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton mana;
    private javax.swing.ButtonGroup power;
    private javax.swing.JRadioButton silence;
    private javax.swing.JRadioButton taunt;
    // End of variables declaration//GEN-END:variables
}
